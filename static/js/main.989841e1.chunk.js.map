{"version":3,"sources":["redux/actions.js","redux/operations.js","redux/selectors.js","components/AddContact/AddContact.js","components/Filter.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/AddContact/AddContacts.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","getFilter","filter","getContactsFiltered","createSelector","normalizedFilter","toLowerCase","contact","name","includes","AddContact","useState","setName","number","setNumber","dispatch","useDispatch","onSubmit","data","actions","post","then","catch","error","handlerInputChange","e","currentTarget","value","className","s","formAddContact","preventDefault","trim","length","alert","addLable","inputFild","type","placeholder","onChange","Filter","useSelector","target","ContactList","contactsFiltered","title","contactList","map","id","contactItem","button","onClick","delete","removeContact","App","useEffect","get","contactsReducer","createReducer","_","payload","filterReducer","loadingReducer","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","loading","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.989841e1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('fetchContactSuccess');\r\nexport const fetchContactError = createAction('fetchContactError');\r\n\r\nexport const addContactRequest = createAction('addContactRequest');\r\nexport const addContactSuccess = createAction('addContactSuccess');\r\nexport const addContactError = createAction('addContactError');\r\n\r\nexport const removeContactRequest = createAction('removeContactRequest');\r\nexport const removeContactSuccess = createAction('removeContactSuccess');\r\nexport const removeContactError = createAction('removeContactError');\r\n\r\n// export const formSubmitHandler = createAction('contact/SubmitHandler');\r\n// export const removeContact = createAction('contact/removeContact');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import axios from 'axios';\r\nimport * as actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContact = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const removeContact = (id) => (dispatch) => {\r\n  dispatch(actions.removeContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.removeContactError(error)));\r\n};\r\n","import { createSelector } from 'reselect';\r\nexport const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;\r\n\r\n\r\nexport const getContactsFiltered = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { addContact } from '../../redux/operations';\r\nimport { addContact } from '../../redux'\r\nimport s from './AddContacts.module.css';\r\n\r\nexport default function AddContact() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (data) => dispatch(addContact(data));\r\n\r\n  const handlerInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === 'name') {\r\n      setName(value);\r\n    }\r\n    if (name === 'number') {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.trim().length <= 2 || number.trim().length <= 6) {\r\n      alert('Введите коректное значение');\r\n    } else {\r\n      onSubmit({ name, number });\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook </h1>\r\n      <form className={s.formAddContact} onSubmit={handleSubmit}>\r\n        <label className={s.addLable}>\r\n          Name\r\n          <input\r\n            className={s.inputFild}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Введите имя\"\r\n            onChange={handlerInputChange}\r\n          ></input>\r\n        </label>\r\n        <label className={s.addLable}>\r\n          Number\r\n          <input\r\n            className={s.inputFild}\r\n            type=\"phone\"\r\n            name=\"number\"\r\n            placeholder=\"Введите номер\"\r\n            value={number}\r\n            onChange={handlerInputChange}\r\n          ></input>\r\n        </label>\r\n        <button className=\"add-contact-btn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../redux/selectors';\r\nimport * as actions from '../redux/actions';\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        placeholder=\"Что ищем?\"\r\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\r\n        value={filter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import Filter from '../Filter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { removeContact } from '../../redux/operations';\r\n// import { getContacts, getContactsFiltered } from '../../redux/selectors';\r\nimport { getContacts, getContactsFiltered, removeContact } from '../../redux';\r\nimport s from './ContactList.module.css';\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getContacts);\r\n  const contactsFiltered = useSelector(getContactsFiltered);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <div className={s.contacts}>\r\n      <h1 className={s.title}>Contacts</h1>\r\n      {contacts.length === 1 ? null : <Filter />}\r\n      {contactsFiltered.length !== 0 ? (\r\n        <ul className={s.contactList}>\r\n          {contactsFiltered.map(({ id, name, number }) => (\r\n            <li className={s.contactItem} key={id}>\r\n              <span className={s.name}>{name}: </span>\r\n              <span className={s.number}>{number}</span>\r\n              <button\r\n                type=\"button\"\r\n                className={s.button}\r\n                onClick={() => dispatch(removeContact(id))}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Такого контакта в списке нет!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AddContact from './components/AddContact/AddContact';\nimport ContactList from './components/ContactList/ContactList';\nimport { fetchContact } from './redux';\n\nimport './App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AddContact />\n      <ContactList />\n    </div>\n  );\n}\n","// import { combineReducers } from 'redux';\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  createReducer,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  // // removeContact,\r\n  changeFilter,\r\n} from './actions';\r\n// import * as actions from './actions';\r\nimport logger from 'redux-logger';\r\n\r\n// const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\r\n//   ? JSON.parse(localStorage.getItem('contacts'))\r\n//   : [];\r\n\r\nconst contactsReducer = createReducer([], {\r\n  // [actions.formSubmitHandler]: (state, { payload }) => {\r\n  //   localStorage.setItem('contacts', JSON.stringify([payload, ...state]));\r\n  //   return [payload, ...state];\r\n  // },\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [payload, ...state];\r\n  },\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n    loading: loadingReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2ksod\",\"title\":\"ContactList_title__Z8AMU\",\"contactList\":\"ContactList_contactList__3yPQi\",\"contactItem\":\"ContactList_contactItem__3KCSL\",\"name\":\"ContactList_name__1IUmW\",\"number\":\"ContactList_number__jv-D8\",\"button\":\"ContactList_button__3k7bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formAddContact\":\"AddContacts_formAddContact__1dakJ\",\"addLable\":\"AddContacts_addLable__1re57\",\"inputFild\":\"AddContacts_inputFild__1LzGZ\"};"],"sourceRoot":""}